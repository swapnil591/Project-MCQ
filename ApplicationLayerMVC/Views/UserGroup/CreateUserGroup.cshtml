@model ModelClasses.UserGroupModel

@{
    ViewBag.Title = "CreateUserGroup";
}
<main id="main" style="padding: 60px 0;">

    <section id="hero" class="hero d-flex align-items-center">
        <div class="container">
            <div class="row">
                <div class="col-lg-6 d-flex flex-column justify-content-center">
                    <label class="text-danger"> @ViewBag.ErrorMsg </label>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.UserGrpId, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.UserGrpId, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.UserGrpId, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@

                            <div class="form-group">
                                @Html.Label("User", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 " >
                                    <select name="UserId" id="UserId" class="form-select">
                                        @foreach (var item in ViewBag.Users)
                                        {
                                            <option value="@item.UserId">@item.FirstName @item.LastName</option>
                                        }
                                    </select>

                                    @*@Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Quiz", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select name="QuizId" id="QuizId" class="form-select">
                                        @foreach (var item in ViewBag.Quiz)
                                        {
                                            <option value="@item.QuizId">@item.Title</option>
                                        }
                                    </select>

                                    @Html.ValidationMessageFor(model => model.QuizId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Role", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <select name="RoleId" id="RoleId" class="form-select">
                                        @foreach (var item in ViewBag.Roles)
                                        {
                                            <option value="@item.RoleId">@item.RoleName</option>
                                        }
                                    </select>

                                    @Html.ValidationMessageFor(model => model.QuizId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="form-group">
                                @Html.LabelFor(model => model.Permission, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Permission, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Permission, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                            <div class="form-group">
                                @Html.LabelFor(model => model.CreatedON, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="text" name="CreatedON" value="@DateTime.Now" class="form-control" readonly />
                                    @Html.ValidationMessageFor(model => model.CreatedON, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UpdatedON, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="text" name="UpdatedON" value="@DateTime.Now" class="form-control" readonly />
                                    @Html.ValidationMessageFor(model => model.UpdatedON, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-get-started" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>

                </div>
            </div>
        </div>
    </section>

</main>